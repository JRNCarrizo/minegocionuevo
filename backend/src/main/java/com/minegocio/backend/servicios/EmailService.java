package com.minegocio.backend.servicios;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;
import jakarta.annotation.PostConstruct;
import java.math.BigDecimal;
import com.minegocio.backend.utilidades.FechaUtil;
import org.springframework.core.env.Environment;

/**
 * Servicio para el env√≠o de emails
 */
@Service
public class EmailService {

    @Autowired(required = false)
    private JavaMailSender mailSender;

    @Autowired
    private Environment environment;

    @Value("${minegocio.app.email.from}")
    private String fromEmail;

    @Value("${minegocio.app.frontend.url}")
    private String frontendUrl;

    @Value("${minegocio.app.nombre}")
    private String appNombre;

    private boolean isDevelopmentMode() {
        String[] activeProfiles = environment.getActiveProfiles();
        for (String profile : activeProfiles) {
            if (profile.contains("dev") || "h2".equals(profile)) {
                return true;
            }
        }
        return false;
    }

    @PostConstruct
    public void init() {
        System.out.println("=== EMAIL SERVICE INIT ===");
        System.out.println("Frontend URL: " + frontendUrl);
        System.out.println("From Email: " + fromEmail);
        System.out.println("JavaMailSender: " + (mailSender != null ? "Configurado" : "NO CONFIGURADO"));
        System.out.println("Modo desarrollo: " + (isDevelopmentMode() ? "S√ç" : "NO"));
        System.out.println("Perfiles activos: " + String.join(", ", environment.getActiveProfiles()));
        System.out.println("Mail habilitado: " + (mailSender != null ? "S√ç" : "NO"));
        
        // Debug adicional para variables de entorno
        System.out.println("=== DEBUG VARIABLES EMAIL ===");
        System.out.println("MAIL_USERNAME existe: " + (System.getenv("MAIL_USERNAME") != null));
        System.out.println("MAIL_PASSWORD existe: " + (System.getenv("MAIL_PASSWORD") != null));
        System.out.println("MAIL_FROM existe: " + (System.getenv("MAIL_FROM") != null));
        System.out.println("fromEmail valor: " + (fromEmail != null ? fromEmail : "NULL"));
        System.out.println("fromEmail vac√≠o: " + (fromEmail != null && fromEmail.trim().isEmpty()));
        System.out.println("==========================");
    }

    /**
     * Env√≠a un email de recuperaci√≥n de contrase√±a
     */
    public void enviarEmailRecuperacion(String emailDestino, String token, String nombreUsuario) {
        // Mostrar informaci√≥n del token en logs para debugging
        System.out.println("=== üìß ENVIANDO EMAIL DE RECUPERACI√ìN ===");
        System.out.println("üìß Email destino: " + emailDestino);
        System.out.println("üë§ Usuario: " + nombreUsuario);
        System.out.println("üîë Token de recuperaci√≥n: " + token);
        System.out.println("üîó Enlace de recuperaci√≥n: https://negocio360.org/recuperar-contrase√±a?token=" + token);
        System.out.println("==================================================");
        
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email de recuperaci√≥n");
            System.out.println("üìß Email simulado enviado a: " + emailDestino);
            System.out.println("üîó Enlace para desarrollo: http://localhost:5173/recuperar-contrase√±a?token=" + token);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailDestino);
        message.setSubject("Recuperaci√≥n de Contrase√±a - Negocio360");
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "Has solicitado recuperar tu contrase√±a en Negocio360.\n\n" +
            "Para establecer una nueva contrase√±a, haz clic en el siguiente enlace:\n" +
            "https://negocio360.org/recuperar-contrase√±a?token=%s\n\n" +
            "Este enlace expirar√° en 1 hora por seguridad.\n\n" +
            "Si no solicitaste este cambio, puedes ignorar este email.\n\n" +
            "Saludos,\n" +
            "Equipo de Negocio360",
            nombreUsuario, token
        );
        
        message.setText(contenido);
        
        try {
            System.out.println("=== DEBUG EMAIL ===");
            System.out.println("From: " + fromEmail);
            System.out.println("To: " + emailDestino);
            System.out.println("Subject: " + message.getSubject());
            System.out.println("Enviando email de recuperaci√≥n...");
            
            mailSender.send(message);
            System.out.println("‚úÖ Email de recuperaci√≥n enviado exitosamente a: " + emailDestino);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar email de recuperaci√≥n: " + e.getMessage());
            System.err.println("‚ö†Ô∏è NOTA: El token se gener√≥ correctamente, pero no se pudo enviar el email.");
            System.err.println("‚ö†Ô∏è Para solucionar esto, configura Gmail correctamente o usa un servicio de email alternativo.");
            // No lanzamos excepci√≥n para que el proceso contin√∫e
            // throw new RuntimeException("Error al enviar email de recuperaci√≥n", e);
        }
    }

    /**
     * Env√≠a un email de recuperaci√≥n de contrase√±a para clientes
     */
    public void enviarEmailRecuperacionCliente(String emailDestino, String token, String nombreUsuario, String subdominio) {
        System.out.println("=== üìß ENVIANDO EMAIL DE RECUPERACI√ìN CLIENTE ===");
        System.out.println("üìß Email destino: " + emailDestino);
        System.out.println("üë§ Usuario: " + nombreUsuario);
        System.out.println("üè™ Subdominio: " + subdominio);
        System.out.println("üîë Token: " + token);
        
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email de recuperaci√≥n de cliente");
            System.out.println("üìß Email simulado enviado a: " + emailDestino);
            System.out.println("üîó Enlace para desarrollo: http://" + subdominio + ".localhost:5173/reset-password?token=" + token);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailDestino);
        message.setSubject("Recuperaci√≥n de Contrase√±a - Tu Tienda");
        
        // Construir el enlace din√°micamente basado en el subdominio y la URL del frontend
        String baseUrl = frontendUrl;
        if (baseUrl.contains("localhost")) {
            // Para desarrollo, usar el formato subdominio.localhost:5173
            baseUrl = "http://" + subdominio + ".localhost:5173";
        } else {
            // Para producci√≥n, usar el formato subdominio.negocio360.org
            baseUrl = "https://" + subdominio + ".negocio360.org";
        }
        String enlaceRecuperacion = baseUrl + "/reset-password?token=" + token;
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "Has solicitado recuperar tu contrase√±a en tu tienda.\n\n" +
            "Para establecer una nueva contrase√±a, haz clic en el siguiente enlace:\n" +
            "%s\n\n" +
            "Este enlace expirar√° en 1 hora por seguridad.\n\n" +
            "Si no solicitaste este cambio, puedes ignorar este email.\n\n" +
            "Saludos,\n" +
            "Equipo de tu tienda",
            nombreUsuario, enlaceRecuperacion
        );
        
        message.setText(contenido);
        
        try {
            System.out.println("=== DEBUG EMAIL CLIENTE ===");
            System.out.println("From: " + fromEmail);
            System.out.println("To: " + emailDestino);
            System.out.println("Subject: " + message.getSubject());
            System.out.println("Subdominio: " + subdominio);
            System.out.println("Enlace de recuperaci√≥n: " + enlaceRecuperacion);
            System.out.println("Contenido del email:");
            System.out.println("--- INICIO CONTENIDO ---");
            System.out.println(contenido);
            System.out.println("--- FIN CONTENIDO ---");
            System.out.println("Enviando email de recuperaci√≥n de cliente...");
            
            // Verificar configuraci√≥n del mailSender
            System.out.println("Configuraci√≥n del mailSender:");
            System.out.println("Host configurado: " + mailSender.toString());
            
            mailSender.send(message);
            System.out.println("‚úÖ Email de recuperaci√≥n de cliente enviado exitosamente a: " + emailDestino);
            System.out.println("‚úÖ Email enviado exitosamente");
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar email de recuperaci√≥n de cliente: " + e.getMessage());
            System.err.println("‚ùå Stack trace completo:");
            e.printStackTrace();
            System.err.println("‚ö†Ô∏è NOTA: El token se gener√≥ correctamente, pero no se pudo enviar el email.");
            System.err.println("‚ö†Ô∏è Para solucionar esto, configura Gmail correctamente o usa un servicio de email alternativo.");
            System.err.println("‚ö†Ô∏è Verifica que la contrase√±a de aplicaci√≥n de Gmail sea correcta.");
            System.err.println("‚ö†Ô∏è Verifica que el email no est√© en la carpeta de spam.");
            // No lanzamos excepci√≥n para que el proceso contin√∫e
            // throw new RuntimeException("Error al enviar email de recuperaci√≥n", e);
        }
    }

    /**
     * Env√≠a un email de confirmaci√≥n de cambio de contrase√±a para clientes
     */
    public void enviarEmailConfirmacionCambioCliente(String emailDestino, String nombreUsuario) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email de confirmaci√≥n de cambio de cliente");
            System.out.println("üìß Email simulado enviado a: " + emailDestino);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailDestino);
        message.setSubject("Contrase√±a Actualizada - Tu Tienda");
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "Tu contrase√±a ha sido actualizada exitosamente en tu tienda.\n\n" +
            "Si no realizaste este cambio, contacta inmediatamente con soporte.\n\n" +
            "Saludos,\n" +
            "Equipo de tu tienda",
            nombreUsuario
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("Email de confirmaci√≥n de cliente enviado a: " + emailDestino);
        } catch (Exception e) {
            System.err.println("Error al enviar email de confirmaci√≥n de cliente: " + e.getMessage());
            // No lanzamos excepci√≥n aqu√≠ porque el cambio de contrase√±a ya se realiz√≥
        }
    }

    /**
     * Env√≠a un email de confirmaci√≥n de cambio de contrase√±a
     */
    public void enviarEmailConfirmacionCambio(String emailDestino, String nombreUsuario) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email de confirmaci√≥n de cambio");
            System.out.println("üìß Email simulado enviado a: " + emailDestino);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailDestino);
        message.setSubject("Contrase√±a Actualizada - Negocio360");
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "Tu contrase√±a ha sido actualizada exitosamente en Negocio360.\n\n" +
            "Si no realizaste este cambio, contacta inmediatamente con soporte.\n\n" +
            "Saludos,\n" +
            "Equipo de Negocio360",
            nombreUsuario
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("Email de confirmaci√≥n enviado a: " + emailDestino);
        } catch (Exception e) {
            System.err.println("Error al enviar email de confirmaci√≥n: " + e.getMessage());
            // No lanzamos excepci√≥n aqu√≠ porque el cambio de contrase√±a ya se realiz√≥
        }
    }

    /**
     * Env√≠a email de verificaci√≥n de cuenta
     */
    public void enviarEmailVerificacion(String emailDestinatario, String nombreUsuario, String tokenVerificacion) {
        System.out.println("=== üìß ENVIANDO EMAIL DE VERIFICACI√ìN ===");
        System.out.println("üìß Email destino: " + emailDestinatario);
        System.out.println("üë§ Usuario: " + nombreUsuario);
        System.out.println("üîë Token: " + tokenVerificacion);
        
        // Verificar si estamos en modo desarrollo O si el email no est√° configurado
        if (isDevelopmentMode() || mailSender == null || fromEmail == null || fromEmail.trim().isEmpty()) {
            System.out.println("==========================================================");
            System.out.println("üöÄ MODO DESARROLLO - EMAIL DE VERIFICACI√ìN (ADMIN)");
            System.out.println("==========================================================");
            System.out.println("üìß Destinatario: " + emailDestinatario);
            System.out.println("üë§ Usuario: " + nombreUsuario);
            System.out.println("üîë Token: " + tokenVerificacion);
            System.out.println("");
            System.out.println("üîó ENLACE DE VERIFICACI√ìN:");
            System.out.println("   https://negocio360.org/verificar-email-admin?token=" + tokenVerificacion);
            System.out.println("   http://localhost:5173/verificar-email-admin?token=" + tokenVerificacion);
            System.out.println("");
            System.out.println("üìã INSTRUCCIONES:");
            System.out.println("   1. Copia el enlace de arriba");
            System.out.println("   2. P√©galo en tu navegador");
            System.out.println("   3. Tu cuenta se verificar√° autom√°ticamente");
            System.out.println("==========================================================");
            return;
        }
        
        try {
            System.out.println("üìß Preparando email para env√≠o real...");
            System.out.println("From Email: " + fromEmail);
            System.out.println("To Email: " + emailDestinatario);
            System.out.println("MailSender configurado: " + (mailSender != null));
            
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(emailDestinatario);
            message.setSubject("Verifica tu cuenta - " + appNombre);
            
            String contenido = String.format(
                "Hola %s,\n\n" +
                "Gracias por registrarte en %s. Para completar tu registro, " +
                "por favor verifica tu cuenta haciendo clic en el siguiente enlace:\n\n" +
                "%s/verificar-email-admin?token=%s\n\n" +
                "Este enlace expirar√° en 24 horas.\n\n" +
                "Si no solicitaste este registro, puedes ignorar este email.\n\n" +
                "Saludos,\n" +
                "El equipo de %s",
                nombreUsuario,
                appNombre,
                frontendUrl,
                tokenVerificacion,
                appNombre
            );
            
            message.setText(contenido);
            
            System.out.println("üì§ Intentando enviar email...");
            mailSender.send(message);
            System.out.println("‚úÖ Email enviado exitosamente a: " + emailDestinatario);
        } catch (Exception e) {
            System.err.println("‚ùå ERROR DETALLADO AL ENVIAR EMAIL:");
            System.err.println("   Tipo de error: " + e.getClass().getName());
            System.err.println("   Mensaje: " + e.getMessage());
            System.err.println("   Causa: " + (e.getCause() != null ? e.getCause().getMessage() : "N/A"));
            e.printStackTrace();
            System.err.println("üîó ENLACE DE VERIFICACI√ìN MANUAL:");
            System.err.println("   https://negocio360.org/verificar-email-admin?token=" + tokenVerificacion);
            // No lanzar la excepci√≥n para no fallar el registro
        }
    }

    /**
     * Env√≠a un email de verificaci√≥n para clientes
     */
    public void enviarEmailVerificacionCliente(String emailDestinatario, String nombreUsuario, String tokenVerificacion, String subdominio, String nombreEmpresa) {
        System.out.println("=== üìß ENVIANDO EMAIL DE VERIFICACI√ìN CLIENTE ===");
        System.out.println("üìß Email destino: " + emailDestinatario);
        System.out.println("üë§ Usuario: " + nombreUsuario);
        System.out.println("üè™ Subdominio: " + subdominio);
        System.out.println("üè¢ Empresa: " + nombreEmpresa);
        System.out.println("üîë Token: " + tokenVerificacion);
        System.out.println("üîç Modo desarrollo detectado: " + (isDevelopmentMode() ? "S√ç" : "NO"));
        
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("==========================================================");
            System.out.println("üöÄ MODO DESARROLLO - EMAIL DE VERIFICACI√ìN (CLIENTE)");
            System.out.println("==========================================================");
            System.out.println("üìß Destinatario: " + emailDestinatario);
            System.out.println("üë§ Usuario: " + nombreUsuario);
            System.out.println("üè¢ Empresa: " + nombreEmpresa);
            System.out.println("üè™ Subdominio: " + subdominio);
            System.out.println("üîë Token: " + tokenVerificacion);
            System.out.println("");
            System.out.println("üîó ENLACES DE VERIFICACI√ìN:");
            System.out.println("   Opci√≥n 1: http://" + subdominio + ".localhost:5173/verificar-email?token=" + tokenVerificacion);
            System.out.println("   Opci√≥n 2: http://localhost:5173/verificar-email?token=" + tokenVerificacion);
            System.out.println("");
            System.out.println("üìã INSTRUCCIONES:");
            System.out.println("   1. Copia uno de los enlaces de arriba");
            System.out.println("   2. P√©galo en tu navegador");
            System.out.println("   3. Tu cuenta se verificar√° autom√°ticamente");
            System.out.println("==========================================================");
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailDestinatario);
        message.setSubject("Verifica tu cuenta - " + nombreEmpresa);
        
        // Construir el enlace din√°micamente basado en el subdominio y la URL del frontend
        String baseUrl = frontendUrl;
        if (baseUrl.contains("localhost")) {
            // Para desarrollo, usar el formato subdominio.localhost:5173
            baseUrl = "http://" + subdominio + ".localhost:5173";
        } else {
            // Para producci√≥n, usar el formato subdominio.negocio360.org
            baseUrl = "https://" + subdominio + ".negocio360.org";
        }
        
        String enlaceVerificacion = baseUrl + "/verificar-email?token=" + tokenVerificacion;
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "Gracias por registrarte en nuestra tienda.\n\n" +
            "Para activar tu cuenta, haz clic en el siguiente enlace:\n" +
            "%s\n\n" +
            "Este enlace expirar√° en 24 horas.\n\n" +
            "Si no creaste esta cuenta, puedes ignorar este email.\n\n" +
            "Saludos,\n" +
            "negocio360",
            nombreUsuario, enlaceVerificacion
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Email de verificaci√≥n de cliente enviado exitosamente a: " + emailDestinatario);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar email de verificaci√≥n de cliente: " + e.getMessage());
        }
    }

    /**
     * Env√≠a email de bienvenida despu√©s de verificar la cuenta
     */
    public void enviarEmailBienvenida(String emailDestinatario, String nombreUsuario, String nombreEmpresa) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email de bienvenida");
            System.out.println("üìß Email simulado enviado a: " + emailDestinatario);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        message.setFrom(fromEmail);
        message.setTo(emailDestinatario);
        message.setSubject("¬°Bienvenido a " + appNombre + "!");
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "¬°Tu cuenta ha sido verificada exitosamente!\n\n" +
            "Tu empresa '%s' ya est√° activa en %s y puedes comenzar a usar todas las funcionalidades.\n\n" +
            "Tu per√≠odo de prueba de 1 mes ha comenzado. Durante este tiempo podr√°s:\n" +
            "- Gestionar productos y servicios\n" +
            "- Administrar clientes\n" +
            "- Procesar pedidos y ventas\n" +
            "- Personalizar tu tienda\n" +
            "- Y mucho m√°s...\n\n" +
            "Para acceder a tu panel de administraci√≥n, visita:\n" +
            "%s\n\n" +
            "Si tienes alguna pregunta, no dudes en contactarnos.\n\n" +
            "¬°Gracias por elegir %s!\n\n" +
            "Saludos,\n" +
            "El equipo de %s",
            nombreUsuario,
            nombreEmpresa,
            appNombre,
            frontendUrl,
            appNombre,
            appNombre
        );
        
        message.setText(contenido);
        mailSender.send(message);
    }

    /**
     * Env√≠a email de recordatorio de verificaci√≥n
     */
    public void enviarEmailRecordatorioVerificacion(String emailDestinatario, String nombreUsuario, String tokenVerificacion) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email de recordatorio de verificaci√≥n");
            System.out.println("üìß Email simulado enviado a: " + emailDestinatario);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        message.setFrom(fromEmail);
        message.setTo(emailDestinatario);
        message.setSubject("Recordatorio: Verifica tu cuenta - " + appNombre);
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "Notamos que a√∫n no has verificado tu cuenta en %s. " +
            "Para completar tu registro y comenzar a usar la plataforma, " +
            "por favor verifica tu cuenta haciendo clic en el siguiente enlace:\n\n" +
            "%s/verificar-email?token=%s\n\n" +
            "Este enlace expirar√° en 24 horas.\n\n" +
            "Si ya verificaste tu cuenta, puedes ignorar este email.\n\n" +
            "Saludos,\n" +
            "El equipo de %s",
            nombreUsuario,
            appNombre,
            frontendUrl,
            tokenVerificacion,
            appNombre
        );
        
        message.setText(contenido);
        mailSender.send(message);
    }

    /**
     * Env√≠a un email gen√©rico
     */
    public void enviarEmail(String emailDestinatario, String asunto, String contenido) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de email gen√©rico");
            System.out.println("üìß Email simulado enviado a: " + emailDestinatario);
            System.out.println("üìù Asunto: " + asunto);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailDestinatario);
        message.setSubject(asunto);
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Email enviado exitosamente a: " + emailDestinatario);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar email: " + e.getMessage());
        }
    }

    /**
     * Env√≠a notificaci√≥n de nuevo pedido al email de contacto de la empresa
     */
    public void enviarNotificacionNuevoPedido(String emailEmpresa, String nombreEmpresa, String numeroPedido, String clienteNombre, String clienteEmail, BigDecimal total, String direccionEntrega) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de notificaci√≥n de nuevo pedido");
            System.out.println("üìß Email simulado enviado a: " + emailEmpresa);
            System.out.println("üõí Pedido: " + numeroPedido);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailEmpresa);
        message.setSubject("üõí Nuevo Pedido Recibido - " + nombreEmpresa);
        
        String contenido = String.format(
            "Hola,\n\n" +
            "Has recibido un nuevo pedido en tu tienda %s.\n\n" +
            "üìã Detalles del pedido:\n" +
            "‚Ä¢ N√∫mero de pedido: %s\n" +
            "‚Ä¢ Cliente: %s\n" +
            "‚Ä¢ Email del cliente: %s\n" +
            "‚Ä¢ Direcci√≥n de entrega: %s\n" +
            "‚Ä¢ Total: $%.2f\n\n" +
            "‚è∞ Fecha y hora: %s\n\n" +
            "Por favor, accede a tu panel de administraci√≥n para gestionar este pedido:\n" +
            "%s\n\n" +
            "Saludos,\n" +
            "negocio360",
            nombreEmpresa,
            numeroPedido,
            clienteNombre,
            clienteEmail,
            direccionEntrega,
            total,
            FechaUtil.ahoraFormateado(),
            frontendUrl
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Notificaci√≥n de nuevo pedido enviada a: " + emailEmpresa);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar notificaci√≥n de nuevo pedido: " + e.getMessage());
        }
    }

    /**
     * Env√≠a notificaci√≥n de pedido cancelado al email de contacto de la empresa
     */
    public void enviarNotificacionPedidoCancelado(String emailEmpresa, String nombreEmpresa, String numeroPedido, String clienteNombre, String clienteEmail, BigDecimal total) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de notificaci√≥n de pedido cancelado");
            System.out.println("üìß Email simulado enviado a: " + emailEmpresa);
            System.out.println("‚ùå Pedido cancelado: " + numeroPedido);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailEmpresa);
        message.setSubject("‚ùå Pedido Cancelado - " + nombreEmpresa);
        
        String contenido = String.format(
            "Hola,\n\n" +
            "Un pedido ha sido cancelado en tu tienda %s.\n\n" +
            "üìã Detalles del pedido cancelado:\n" +
            "‚Ä¢ N√∫mero de pedido: %s\n" +
            "‚Ä¢ Cliente: %s\n" +
            "‚Ä¢ Email del cliente: %s\n" +
            "‚Ä¢ Total: $%.2f\n\n" +
            "‚è∞ Fecha y hora de cancelaci√≥n: %s\n\n" +
            "El stock de los productos ha sido restaurado autom√°ticamente.\n\n" +
            "Saludos,\n" +
            "negocio360",
            nombreEmpresa,
            numeroPedido,
            clienteNombre,
            clienteEmail,
            total,
            FechaUtil.ahoraFormateado()
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Notificaci√≥n de pedido cancelado enviada a: " + emailEmpresa);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar notificaci√≥n de pedido cancelado: " + e.getMessage());
        }
    }

    /**
     * Env√≠a confirmaci√≥n de compra al cliente
     */
    public void enviarConfirmacionCompraCliente(String emailCliente, String nombreCliente, String nombreEmpresa, String numeroPedido, BigDecimal total, String direccionEntrega) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de confirmaci√≥n de compra al cliente");
            System.out.println("üìß Email simulado enviado a: " + emailCliente);
            System.out.println("üõí Pedido: " + numeroPedido);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailCliente);
        message.setSubject("üõí Confirmaci√≥n de Compra - " + nombreEmpresa);
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "¬°Gracias por tu compra en %s!\n\n" +
            "üìã Detalles de tu pedido:\n" +
            "‚Ä¢ N√∫mero de pedido: %s\n" +
            "‚Ä¢ Total: $%.2f\n" +
            "‚Ä¢ Direcci√≥n de entrega: %s\n" +
            "‚Ä¢ Estado: Pendiente de confirmaci√≥n\n\n" +
            "‚è∞ Fecha y hora: %s\n\n" +
            "Tu pedido ha sido recibido y est√° siendo procesado. Te notificaremos cuando sea confirmado por nuestro equipo.\n\n" +
            "Si tienes alguna pregunta, no dudes en contactarnos.\n\n" +
            "Saludos,\n" +
            "Equipo de %s",
            nombreCliente,
            nombreEmpresa,
            numeroPedido,
            total,
            direccionEntrega,
            FechaUtil.ahoraFormateado(),
            nombreEmpresa
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Confirmaci√≥n de compra enviada al cliente: " + emailCliente);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar confirmaci√≥n de compra al cliente: " + e.getMessage());
        }
    }

    /**
     * Env√≠a confirmaci√≥n de pedido por administrador al cliente
     */
    public void enviarConfirmacionAdminCliente(String emailCliente, String nombreCliente, String nombreEmpresa, String numeroPedido, BigDecimal total) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de confirmaci√≥n de administrador al cliente");
            System.out.println("üìß Email simulado enviado a: " + emailCliente);
            System.out.println("‚úÖ Pedido confirmado: " + numeroPedido);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailCliente);
        message.setSubject("‚úÖ Pedido Confirmado - " + nombreEmpresa);
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "¬°Excelentes noticias! Tu pedido en %s ha sido confirmado.\n\n" +
            "üìã Detalles del pedido:\n" +
            "‚Ä¢ N√∫mero de pedido: %s\n" +
            "‚Ä¢ Total: $%.2f\n" +
            "‚Ä¢ Estado: Confirmado\n\n" +
            "‚è∞ Fecha y hora de confirmaci√≥n: %s\n\n" +
            "Tu pedido est√° siendo preparado y pronto estar√° en camino. Te notificaremos cuando sea enviado.\n\n" +
            "Gracias por confiar en nosotros.\n\n" +
            "Saludos,\n" +
            "Equipo de %s",
            nombreCliente,
            nombreEmpresa,
            numeroPedido,
            total,
            FechaUtil.ahoraFormateado(),
            nombreEmpresa
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Confirmaci√≥n de administrador enviada al cliente: " + emailCliente);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar confirmaci√≥n de administrador al cliente: " + e.getMessage());
        }
    }

    /**
     * Env√≠a notificaci√≥n de entrega al cliente
     */
    public void enviarNotificacionEntregaCliente(String emailCliente, String nombreCliente, String nombreEmpresa, String numeroPedido, BigDecimal total) {
        if (isDevelopmentMode() || mailSender == null) {
            System.out.println("üöÄ MODO DESARROLLO O EMAIL DESHABILITADO: Simulando env√≠o de notificaci√≥n de entrega al cliente");
            System.out.println("üìß Email simulado enviado a: " + emailCliente);
            System.out.println("üéâ Pedido entregado: " + numeroPedido);
            return;
        }
        
        SimpleMailMessage message = new SimpleMailMessage();
        
        message.setFrom(fromEmail);
        message.setTo(emailCliente);
        message.setSubject("üéâ ¬°Tu Pedido Ha Sido Entregado! - " + nombreEmpresa);
        
        String contenido = String.format(
            "Hola %s,\n\n" +
            "¬°Tu pedido ha sido entregado exitosamente!\n\n" +
            "üìã Detalles del pedido:\n" +
            "‚Ä¢ N√∫mero de pedido: %s\n" +
            "‚Ä¢ Total: $%.2f\n" +
            "‚Ä¢ Estado: Entregado\n\n" +
            "‚è∞ Fecha y hora de entrega: %s\n\n" +
            "Esperamos que disfrutes tu compra. Si tienes alguna pregunta o necesitas asistencia, no dudes en contactarnos.\n\n" +
            "¬°Gracias por elegir %s!\n\n" +
            "Saludos,\n" +
            "Equipo de %s",
            nombreCliente,
            numeroPedido,
            total,
            FechaUtil.ahoraFormateado(),
            nombreEmpresa,
            nombreEmpresa
        );
        
        message.setText(contenido);
        
        try {
            mailSender.send(message);
            System.out.println("‚úÖ Notificaci√≥n de entrega enviada al cliente: " + emailCliente);
        } catch (Exception e) {
            System.err.println("‚ùå Error al enviar notificaci√≥n de entrega al cliente: " + e.getMessage());
        }
    }
} 